services:
  immich-server:
    container_name: immich
    image: ghcr.io/immich-app/immich-server:release
    restart: unless-stopped
    env_file: .env
    ports:
      - 2283:2283
    volumes:
      - ./upload:/usr/src/app/upload
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      - redis
      - database

  machine-learning:
    container_name: immich_machine_learning
    image: ghcr.io/immich-app/immich-machine-learning:release
    env_file: .env
    restart: unless-stopped
    volumes:
      - ./cache:/cache

  redis:
    container_name: immich_redis
    # update this image to match the example for latest image hashes
    # https://github.com/immich-app/immich/releases/latest/download/docker-compose.yml
    image: docker.io/redis:6.2-alpine@sha256:2d1463258f2764328496376f5d965f20c6a67f66ea2b06dc42af351f75248792
    restart: unless-stopped
    healthcheck:
      test: redis-cli ping || exit 1

  database:
    container_name: immich_postgres
    # update this image to match the example for latest image hashes
    # https://github.com/immich-app/immich/releases/latest/download/docker-compose.yml
    image: docker.io/tensorchord/pgvecto-rs:pg14-v0.2.0@sha256:90724186f0a3517cf6914295b5ab410db9ce23190a2d9d0b9dd6463e3fa298f0
    env_file: .env
    volumes:
      - ./data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "${DB_DATABASE_NAME}"]
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB_DATABASE_NAME}
      POSTGRES_INITDB_ARGS: '--data-checksums'
    command: ["postgres", "-c" ,"shared_preload_libraries=vectors.so", "-c", 'search_path="$$user", public, vectors', "-c", "logging_collector=on", "-c", "max_wal_size=2GB", "-c", "shared_buffers=512MB", "-c", "wal_compression=on"]
    restart: unless-stopped

# example .env file
# DB_DATABASE_NAME=postgres
# DB_USERNAME=postgres
# DB_PASSWORD=
